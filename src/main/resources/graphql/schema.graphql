scalar Duration
scalar LocalDate

schema {
    query: Query
    mutation: Mutation
}

type Query {
    user(id: Long!): User
    users: [User!]!
    session(id: Long!): Session
    sessions(range: DateRange): [Session!]!
    sessionSet(id: Long!): SessionSet
    sessionSets: [SessionSet!]!
}

type User {
    id: Long!
    version: Long!
    deleted: Boolean!
    firstName: String!
    lastName: String!
    email: String!
    administrator: Boolean!
    sessions(range: DateRange): [Session!]!
}

type Session {
    id: Long!
    version: Long!
    deleted: Boolean!
    date: LocalDate!
    poolLength: Int!
    calories: Int!
    sessionSets: [SessionSet!]!
}

type SessionSet {
    id: Long!
    version: Long!
    deleted: Boolean!
    number: Int!
    swimmingTime: Duration!
    restTime: Duration!
    laps: Int!
    averageStrokes: Int!
    speed: Int!
    efficiencyIndex: Int!
    session: Session!
}

type Mutation {
    createUser(input: UserInput!): User
}

input UserInput {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    administrator: Boolean!
}

input DateRange {
    minimum: LocalDate!
    maximum: LocalDate!
}
